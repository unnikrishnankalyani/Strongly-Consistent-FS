// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wifs.proto

#include "wifs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace wifs {
constexpr HeartBeat::HeartBeat(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : state_(0)
{}
struct HeartBeatDefaultTypeInternal {
  constexpr HeartBeatDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HeartBeatDefaultTypeInternal() {}
  union {
    HeartBeat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HeartBeatDefaultTypeInternal _HeartBeat_default_instance_;
constexpr ClientInitReq::ClientInitReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ClientInitReqDefaultTypeInternal {
  constexpr ClientInitReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientInitReqDefaultTypeInternal() {}
  union {
    ClientInitReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientInitReqDefaultTypeInternal _ClientInitReq_default_instance_;
constexpr ClientInitRes::ClientInitRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : primary_ip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ClientInitResDefaultTypeInternal {
  constexpr ClientInitResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientInitResDefaultTypeInternal() {}
  union {
    ClientInitRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientInitResDefaultTypeInternal _ClientInitRes_default_instance_;
constexpr WriteReq::WriteReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buf_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(0){}
struct WriteReqDefaultTypeInternal {
  constexpr WriteReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WriteReqDefaultTypeInternal() {}
  union {
    WriteReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WriteReqDefaultTypeInternal _WriteReq_default_instance_;
constexpr WriteRes::WriteRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buf_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0){}
struct WriteResDefaultTypeInternal {
  constexpr WriteResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WriteResDefaultTypeInternal() {}
  union {
    WriteRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WriteResDefaultTypeInternal _WriteRes_default_instance_;
constexpr ReadReq::ReadReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buf_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(0){}
struct ReadReqDefaultTypeInternal {
  constexpr ReadReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadReqDefaultTypeInternal() {}
  union {
    ReadReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadReqDefaultTypeInternal _ReadReq_default_instance_;
constexpr ReadRes::ReadRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buf_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0){}
struct ReadResDefaultTypeInternal {
  constexpr ReadResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadResDefaultTypeInternal() {}
  union {
    ReadRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadResDefaultTypeInternal _ReadRes_default_instance_;
}  // namespace wifs
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_wifs_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_wifs_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_wifs_2eproto = nullptr;

const uint32_t TableStruct_wifs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wifs::HeartBeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wifs::HeartBeat, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wifs::ClientInitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wifs::ClientInitRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wifs::ClientInitRes, primary_ip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wifs::WriteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wifs::WriteReq, address_),
  PROTOBUF_FIELD_OFFSET(::wifs::WriteReq, buf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wifs::WriteRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wifs::WriteRes, status_),
  PROTOBUF_FIELD_OFFSET(::wifs::WriteRes, buf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wifs::ReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wifs::ReadReq, address_),
  PROTOBUF_FIELD_OFFSET(::wifs::ReadReq, buf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wifs::ReadRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wifs::ReadRes, status_),
  PROTOBUF_FIELD_OFFSET(::wifs::ReadRes, buf_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::wifs::HeartBeat)},
  { 7, -1, -1, sizeof(::wifs::ClientInitReq)},
  { 13, -1, -1, sizeof(::wifs::ClientInitRes)},
  { 20, -1, -1, sizeof(::wifs::WriteReq)},
  { 28, -1, -1, sizeof(::wifs::WriteRes)},
  { 36, -1, -1, sizeof(::wifs::ReadReq)},
  { 44, -1, -1, sizeof(::wifs::ReadRes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wifs::_HeartBeat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wifs::_ClientInitReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wifs::_ClientInitRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wifs::_WriteReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wifs::_WriteRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wifs::_ReadReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wifs::_ReadRes_default_instance_),
};

const char descriptor_table_protodef_wifs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nwifs.proto\022\004wifs\"O\n\tHeartBeat\022$\n\005state"
  "\030\001 \001(\0162\025.wifs.HeartBeat.State\"\034\n\005State\022\010"
  "\n\004INIT\020\000\022\t\n\005READY\020\001\"\017\n\rClientInitReq\"#\n\r"
  "ClientInitRes\022\022\n\nprimary_ip\030\001 \001(\t\"(\n\010Wri"
  "teReq\022\017\n\007address\030\001 \001(\005\022\013\n\003buf\030\002 \001(\014\"\'\n\010W"
  "riteRes\022\016\n\006status\030\001 \001(\005\022\013\n\003buf\030\002 \001(\014\"\'\n\007"
  "ReadReq\022\017\n\007address\030\001 \001(\005\022\013\n\003buf\030\002 \001(\014\"&\n"
  "\007ReadRes\022\016\n\006status\030\001 \001(\005\022\013\n\003buf\030\002 \001(\0142\310\001"
  "\n\004WIFS\022*\n\004Ping\022\017.wifs.HeartBeat\032\017.wifs.H"
  "eartBeat\"\000\022+\n\twifs_READ\022\r.wifs.ReadReq\032\r"
  ".wifs.ReadRes\"\000\022.\n\nwifs_WRITE\022\016.wifs.Wri"
  "teReq\032\016.wifs.WriteRes\"\000\0227\n\twifs_INIT\022\023.w"
  "ifs.ClientInitReq\032\023.wifs.ClientInitRes\"\000"
  "B\t\n\007ex.grpcb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_wifs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_wifs_2eproto = {
  false, false, 539, descriptor_table_protodef_wifs_2eproto, "wifs.proto", 
  &descriptor_table_wifs_2eproto_once, nullptr, 0, 7,
  schemas, file_default_instances, TableStruct_wifs_2eproto::offsets,
  file_level_metadata_wifs_2eproto, file_level_enum_descriptors_wifs_2eproto, file_level_service_descriptors_wifs_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_wifs_2eproto_getter() {
  return &descriptor_table_wifs_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_wifs_2eproto(&descriptor_table_wifs_2eproto);
namespace wifs {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HeartBeat_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_wifs_2eproto);
  return file_level_enum_descriptors_wifs_2eproto[0];
}
bool HeartBeat_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr HeartBeat_State HeartBeat::INIT;
constexpr HeartBeat_State HeartBeat::READY;
constexpr HeartBeat_State HeartBeat::State_MIN;
constexpr HeartBeat_State HeartBeat::State_MAX;
constexpr int HeartBeat::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class HeartBeat::_Internal {
 public:
};

HeartBeat::HeartBeat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wifs.HeartBeat)
}
HeartBeat::HeartBeat(const HeartBeat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:wifs.HeartBeat)
}

inline void HeartBeat::SharedCtor() {
state_ = 0;
}

HeartBeat::~HeartBeat() {
  // @@protoc_insertion_point(destructor:wifs.HeartBeat)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void HeartBeat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HeartBeat::ArenaDtor(void* object) {
  HeartBeat* _this = reinterpret_cast< HeartBeat* >(object);
  (void)_this;
}
void HeartBeat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HeartBeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HeartBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:wifs.HeartBeat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartBeat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .wifs.HeartBeat.State state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::wifs::HeartBeat_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HeartBeat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wifs.HeartBeat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .wifs.HeartBeat.State state = 1;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wifs.HeartBeat)
  return target;
}

size_t HeartBeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wifs.HeartBeat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .wifs.HeartBeat.State state = 1;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HeartBeat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HeartBeat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HeartBeat::GetClassData() const { return &_class_data_; }

void HeartBeat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HeartBeat *>(to)->MergeFrom(
      static_cast<const HeartBeat &>(from));
}


void HeartBeat::MergeFrom(const HeartBeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wifs.HeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HeartBeat::CopyFrom(const HeartBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wifs.HeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeat::IsInitialized() const {
  return true;
}

void HeartBeat::InternalSwap(HeartBeat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartBeat::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_wifs_2eproto_getter, &descriptor_table_wifs_2eproto_once,
      file_level_metadata_wifs_2eproto[0]);
}

// ===================================================================

class ClientInitReq::_Internal {
 public:
};

ClientInitReq::ClientInitReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:wifs.ClientInitReq)
}
ClientInitReq::ClientInitReq(const ClientInitReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:wifs.ClientInitReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClientInitReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClientInitReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ClientInitReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_wifs_2eproto_getter, &descriptor_table_wifs_2eproto_once,
      file_level_metadata_wifs_2eproto[1]);
}

// ===================================================================

class ClientInitRes::_Internal {
 public:
};

ClientInitRes::ClientInitRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wifs.ClientInitRes)
}
ClientInitRes::ClientInitRes(const ClientInitRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  primary_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    primary_ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_primary_ip().empty()) {
    primary_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_primary_ip(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wifs.ClientInitRes)
}

inline void ClientInitRes::SharedCtor() {
primary_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  primary_ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ClientInitRes::~ClientInitRes() {
  // @@protoc_insertion_point(destructor:wifs.ClientInitRes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ClientInitRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  primary_ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientInitRes::ArenaDtor(void* object) {
  ClientInitRes* _this = reinterpret_cast< ClientInitRes* >(object);
  (void)_this;
}
void ClientInitRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientInitRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientInitRes::Clear() {
// @@protoc_insertion_point(message_clear_start:wifs.ClientInitRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primary_ip_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientInitRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string primary_ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_primary_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "wifs.ClientInitRes.primary_ip"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ClientInitRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wifs.ClientInitRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string primary_ip = 1;
  if (!this->_internal_primary_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primary_ip().data(), static_cast<int>(this->_internal_primary_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wifs.ClientInitRes.primary_ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_primary_ip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wifs.ClientInitRes)
  return target;
}

size_t ClientInitRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wifs.ClientInitRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string primary_ip = 1;
  if (!this->_internal_primary_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primary_ip());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClientInitRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ClientInitRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClientInitRes::GetClassData() const { return &_class_data_; }

void ClientInitRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ClientInitRes *>(to)->MergeFrom(
      static_cast<const ClientInitRes &>(from));
}


void ClientInitRes::MergeFrom(const ClientInitRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wifs.ClientInitRes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_primary_ip().empty()) {
    _internal_set_primary_ip(from._internal_primary_ip());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClientInitRes::CopyFrom(const ClientInitRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wifs.ClientInitRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientInitRes::IsInitialized() const {
  return true;
}

void ClientInitRes::InternalSwap(ClientInitRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &primary_ip_, lhs_arena,
      &other->primary_ip_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientInitRes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_wifs_2eproto_getter, &descriptor_table_wifs_2eproto_once,
      file_level_metadata_wifs_2eproto[2]);
}

// ===================================================================

class WriteReq::_Internal {
 public:
};

WriteReq::WriteReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wifs.WriteReq)
}
WriteReq::WriteReq(const WriteReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    buf_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buf(), 
      GetArenaForAllocation());
  }
  address_ = from.address_;
  // @@protoc_insertion_point(copy_constructor:wifs.WriteReq)
}

inline void WriteReq::SharedCtor() {
buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
address_ = 0;
}

WriteReq::~WriteReq() {
  // @@protoc_insertion_point(destructor:wifs.WriteReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WriteReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  buf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WriteReq::ArenaDtor(void* object) {
  WriteReq* _this = reinterpret_cast< WriteReq* >(object);
  (void)_this;
}
void WriteReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WriteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wifs.WriteReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf_.ClearToEmpty();
  address_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WriteReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wifs.WriteReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_address(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wifs.WriteReq)
  return target;
}

size_t WriteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wifs.WriteReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WriteReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WriteReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WriteReq::GetClassData() const { return &_class_data_; }

void WriteReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WriteReq *>(to)->MergeFrom(
      static_cast<const WriteReq &>(from));
}


void WriteReq::MergeFrom(const WriteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wifs.WriteReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buf().empty()) {
    _internal_set_buf(from._internal_buf());
  }
  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WriteReq::CopyFrom(const WriteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wifs.WriteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteReq::IsInitialized() const {
  return true;
}

void WriteReq::InternalSwap(WriteReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buf_, lhs_arena,
      &other->buf_, rhs_arena
  );
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_wifs_2eproto_getter, &descriptor_table_wifs_2eproto_once,
      file_level_metadata_wifs_2eproto[3]);
}

// ===================================================================

class WriteRes::_Internal {
 public:
};

WriteRes::WriteRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wifs.WriteRes)
}
WriteRes::WriteRes(const WriteRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    buf_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buf(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:wifs.WriteRes)
}

inline void WriteRes::SharedCtor() {
buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_ = 0;
}

WriteRes::~WriteRes() {
  // @@protoc_insertion_point(destructor:wifs.WriteRes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WriteRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  buf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WriteRes::ArenaDtor(void* object) {
  WriteRes* _this = reinterpret_cast< WriteRes* >(object);
  (void)_this;
}
void WriteRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WriteRes::Clear() {
// @@protoc_insertion_point(message_clear_start:wifs.WriteRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WriteRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wifs.WriteRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wifs.WriteRes)
  return target;
}

size_t WriteRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wifs.WriteRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WriteRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WriteRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WriteRes::GetClassData() const { return &_class_data_; }

void WriteRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WriteRes *>(to)->MergeFrom(
      static_cast<const WriteRes &>(from));
}


void WriteRes::MergeFrom(const WriteRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wifs.WriteRes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buf().empty()) {
    _internal_set_buf(from._internal_buf());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WriteRes::CopyFrom(const WriteRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wifs.WriteRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRes::IsInitialized() const {
  return true;
}

void WriteRes::InternalSwap(WriteRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buf_, lhs_arena,
      &other->buf_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteRes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_wifs_2eproto_getter, &descriptor_table_wifs_2eproto_once,
      file_level_metadata_wifs_2eproto[4]);
}

// ===================================================================

class ReadReq::_Internal {
 public:
};

ReadReq::ReadReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wifs.ReadReq)
}
ReadReq::ReadReq(const ReadReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    buf_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buf(), 
      GetArenaForAllocation());
  }
  address_ = from.address_;
  // @@protoc_insertion_point(copy_constructor:wifs.ReadReq)
}

inline void ReadReq::SharedCtor() {
buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
address_ = 0;
}

ReadReq::~ReadReq() {
  // @@protoc_insertion_point(destructor:wifs.ReadReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ReadReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  buf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadReq::ArenaDtor(void* object) {
  ReadReq* _this = reinterpret_cast< ReadReq* >(object);
  (void)_this;
}
void ReadReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:wifs.ReadReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf_.ClearToEmpty();
  address_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wifs.ReadReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_address(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wifs.ReadReq)
  return target;
}

size_t ReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wifs.ReadReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadReq::GetClassData() const { return &_class_data_; }

void ReadReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadReq *>(to)->MergeFrom(
      static_cast<const ReadReq &>(from));
}


void ReadReq::MergeFrom(const ReadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wifs.ReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buf().empty()) {
    _internal_set_buf(from._internal_buf());
  }
  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadReq::CopyFrom(const ReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wifs.ReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadReq::IsInitialized() const {
  return true;
}

void ReadReq::InternalSwap(ReadReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buf_, lhs_arena,
      &other->buf_, rhs_arena
  );
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_wifs_2eproto_getter, &descriptor_table_wifs_2eproto_once,
      file_level_metadata_wifs_2eproto[5]);
}

// ===================================================================

class ReadRes::_Internal {
 public:
};

ReadRes::ReadRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wifs.ReadRes)
}
ReadRes::ReadRes(const ReadRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buf().empty()) {
    buf_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buf(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:wifs.ReadRes)
}

inline void ReadRes::SharedCtor() {
buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_ = 0;
}

ReadRes::~ReadRes() {
  // @@protoc_insertion_point(destructor:wifs.ReadRes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ReadRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  buf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadRes::ArenaDtor(void* object) {
  ReadRes* _this = reinterpret_cast< ReadRes* >(object);
  (void)_this;
}
void ReadRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadRes::Clear() {
// @@protoc_insertion_point(message_clear_start:wifs.ReadRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes buf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_buf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wifs.ReadRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_buf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wifs.ReadRes)
  return target;
}

size_t ReadRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wifs.ReadRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 2;
  if (!this->_internal_buf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buf());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadRes::GetClassData() const { return &_class_data_; }

void ReadRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadRes *>(to)->MergeFrom(
      static_cast<const ReadRes &>(from));
}


void ReadRes::MergeFrom(const ReadRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wifs.ReadRes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buf().empty()) {
    _internal_set_buf(from._internal_buf());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadRes::CopyFrom(const ReadRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wifs.ReadRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRes::IsInitialized() const {
  return true;
}

void ReadRes::InternalSwap(ReadRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buf_, lhs_arena,
      &other->buf_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadRes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_wifs_2eproto_getter, &descriptor_table_wifs_2eproto_once,
      file_level_metadata_wifs_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace wifs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wifs::HeartBeat* Arena::CreateMaybeMessage< ::wifs::HeartBeat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wifs::HeartBeat >(arena);
}
template<> PROTOBUF_NOINLINE ::wifs::ClientInitReq* Arena::CreateMaybeMessage< ::wifs::ClientInitReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wifs::ClientInitReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wifs::ClientInitRes* Arena::CreateMaybeMessage< ::wifs::ClientInitRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wifs::ClientInitRes >(arena);
}
template<> PROTOBUF_NOINLINE ::wifs::WriteReq* Arena::CreateMaybeMessage< ::wifs::WriteReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wifs::WriteReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wifs::WriteRes* Arena::CreateMaybeMessage< ::wifs::WriteRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wifs::WriteRes >(arena);
}
template<> PROTOBUF_NOINLINE ::wifs::ReadReq* Arena::CreateMaybeMessage< ::wifs::ReadReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wifs::ReadReq >(arena);
}
template<> PROTOBUF_NOINLINE ::wifs::ReadRes* Arena::CreateMaybeMessage< ::wifs::ReadRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wifs::ReadRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
